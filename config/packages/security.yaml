security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
#        in_memory: { memory: ~ }

        users:
            entity:
                # the class of the entity that represents users
                class: 'App\Entity\User'
                # the property to query by - e.g. username, email, etc
                # Fred: Commented, see UserRepository
#                property: 'username'
                # optional: if you're using multiple Doctrine entity
                # managers, this option defines which one to use
                # manager_name: 'customer'

    encoders:
        # use your user class name here
        App\Entity\User:
            # bcrypt or sodium are recommended
            # sodium is more secure, but requires PHP 7.2 or the Sodium extension
            algorithm: bcrypt
            cost: 12

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            anonymous: true
            form_login:
                login_path: /login
                check_path: login
            logout:
                path: /logout
                target: app_login
                invalidate_session: true
            guard:
                authenticators:
                    - App\Security\UserAuthenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

            access_denied_handler: App\Security\AccessDeniedHandler

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/json_fields, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
